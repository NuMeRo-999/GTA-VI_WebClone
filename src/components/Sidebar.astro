---
// Astro imports
import LogoVIPalmeras from "@/assets/logo-vi-palmeras.svg";
import LanguageIcon from "@/assets/language.svg";
import KeyboardControlKeyIcon from "@/assets/keyboard-control-key.svg";
---

<section
  id="sidebar-images"
  class="z-20 absolute top-0 left-0 w-screen h-screen bg-[rgba(17,17,23,0.6)] sidebar-blur opacity-0 transition-opacity duration-1000 pointer-events-none"
>
  <div
    class="h-screen w-[50vw] flex justify-center items-center"
    id="image-preview"
  >
    <LogoVIPalmeras
      id="logo-vi-palmeras"
      class="text-white left-1/8 w-1/3 drop-shadow-[0_0_150px_rgba(255,255,255,1)]"
    />
  </div>
</section>

<aside
  id="sidebar"
  class="fixed z-30 top-0 right-0 h-full w-[49vw] transition-transform duration-800 menu-sidebar-closed background-gradient"
>
  <div
    class="flex items-center px-6 mt-[3vw] mr-[9.3vw] ml-[2.3vw] text-[15px]"
    style="font-family: 'GTA SemiBold'"
  >
    <button
      class="tab-button selected hover:text-yellow-100"
      data-tab="personajes">Personajes</button
    >
    <button class="tab-button hover:text-yellow-100" data-tab="lugares"
      >Lugares</button
    >
    <button class="tab-button hover:text-yellow-100" data-tab="trailers"
      >Tráileres</button
    >
    <button class="tab-button hover:text-yellow-100" data-tab="descargas"
      >Descargas</button
    >
  </div>

  <nav
    id="sidebar-content"
    class="h-[75%] px-16 py-12 text-[55px] flex flex-col uppercase justify-center overflow-y-auto"
    style="font-family: 'GTA Narrow'"
  >
  </nav>

  <div
    class="flex justify-between items-center px-16 text-[15px] font-weight-[500] fixed bottom-5 right-0 w-[49vw]"
  >
    <div
      id="language"
      class="flex items-center gap-2 h-14 cursor-pointer"
      style="font-family: 'GTA SemiBold'"
    >
      <LanguageIcon class="size-4" />
      <p>Español</p>
      <KeyboardControlKeyIcon class="size-4 mt-1" />
    </div>
    <div
      id="animation-mode"
      class="flex items-center gap-2 h-14 cursor-pointer"
      style="font-family: 'GTA SemiBold'"
    >
      <p>Movimiento</p>
      <KeyboardControlKeyIcon class="size-4 mt-1" />
    </div>
  </div>
</aside>

<script type="module">
  import { sidebarData } from "/src/data/sidebarData.js";
  import gsap from "/node_modules/gsap/index.js";

  const menuButton = document.getElementById("menu-button");
  const sidebar = document.getElementById("sidebar");
  const sidebarImages = document.getElementById("sidebar-images");
  const imagePreview = document.getElementById("image-preview");
  const tabButtons = document.querySelectorAll(".tab-button");
  const sidebarContent = document.getElementById("sidebar-content");

  let menuOpen = false;
  let currentTab = "personajes";

  const originalSVG = document
    .querySelector("#image-preview svg")
    ?.cloneNode(true);

  menuButton?.addEventListener("click", () => {
    menuOpen = !menuOpen;
    menuButton.classList.toggle("menu-open", menuOpen);
    menuButton.classList.toggle("menu-closed", !menuOpen);
    sidebar?.classList.toggle("menu-sidebar-open", menuOpen);
    sidebar?.classList.toggle("menu-sidebar-closed", !menuOpen);

    sidebarImages?.classList.toggle("opacity-0", !menuOpen);
    sidebarImages?.classList.toggle("opacity-100", menuOpen);
  });

  function restoreLogo() {
    const currentImage = document.getElementById("image-preview-img");
    if (currentImage) {
      imagePreview.removeChild(currentImage);
    }

    imagePreview.innerHTML = "";

    if (originalSVG) {
      const clone = originalSVG.cloneNode(true);
      clone.style.opacity = 0;
      imagePreview.appendChild(clone);

      gsap.to(clone, {
        opacity: 1,
        duration: 1,
        ease: "sine.in",
      });
    }

    sidebarImages.classList.add("sidebar-blur");
    imagePreview.classList.replace("w-full", "w-[50vw]");
  }

  function renderItems(tab) {
    sidebarContent.innerHTML = "";

    if (tab === "trailers") {
      const fragment = document.createDocumentFragment();

      sidebarData[tab].forEach(({ name, image, date, time, new: isNew }) => {
        const container = document.createElement("div");
        container.className = "flex items-center mb-6 opacity-0 translate-y-4";

        // Imagen + duración
        const imageWrapper = document.createElement("div");
        imageWrapper.className =
          "relative w-[313px] h-[176px] shrink-0 object-cover";

        const img = document.createElement("img");
        img.src = `src/assets/SidebarImages/${image}`;
        img.className = "w-full h-full object-cover";

        // Botón de play centrado
        const playButton = document.createElement("button");
        playButton.className =
          "absolute inset-0 flex items-center justify-center";
        playButton.style.pointerEvents = "none"; // No interactivo, solo visual

        const playCircle = document.createElement("span");
        playCircle.className =
          "flex items-center justify-center rounded-full bg-[rgba(17, 17, 23, .3)] w-12 h-12 backdrop-blur-[12.5px]";
        // SVG de play
        playCircle.innerHTML = `
          <svg width="32" height="32" viewBox="0 0 32 32" fill="white" xmlns="http://www.w3.org/2000/svg">
            <polygon points="12,9 24,16 12,23" />
          </svg>
        `;

        playButton.appendChild(playCircle);

        const timeLabel = document.createElement("div");
        timeLabel.textContent = time;
        timeLabel.className =
          "absolute bottom-1 left-1 bg-[rgba(17,17,23,.6)] backdrop-blur-[23px] text-white text-[15px] px-2";

        imageWrapper.appendChild(img);
        imageWrapper.appendChild(playButton);
        imageWrapper.appendChild(timeLabel);

        imageWrapper.appendChild(img);
        imageWrapper.appendChild(timeLabel);

        // Info a la derecha
        const infoWrapper = document.createElement("div");
        infoWrapper.className =
          "flex flex-col p-4 justify-center size-full bg-[#1d1d23]";

        if (isNew) {
          const newLabel = document.createElement("span");
          newLabel.textContent = "Nuevo";
          newLabel.className =
            "text-[15px] uppercase text-black bg-yellow-100 w-fit px-2  mb-1";
          infoWrapper.appendChild(newLabel);
        }

        const title = document.createElement("h3");
        title.textContent = name;
        title.className = "text-[17px] leading-snug normal-case";
        title.style.fontFamily = "'GTA SemiBold'";

        const dateText = document.createElement("p");
        dateText.textContent = date;
        dateText.className = "text-sm text-gray-400 normal-case";
        dateText.style.fontFamily = "'GTA SemiBold'";

        infoWrapper.appendChild(title);
        infoWrapper.appendChild(dateText);

        container.appendChild(imageWrapper);
        container.appendChild(infoWrapper);
        fragment.appendChild(container);
      });

      sidebarContent.appendChild(fragment);

      // Animación
      const cards = sidebarContent.querySelectorAll("div.opacity-0");
      gsap.to(cards, {
        opacity: 1,
        y: 0,
        duration: 0.6,
        ease: "power2.out",
        stagger: 0.06,
      });
    } else if (tab === "descargas") {
      const fragment = document.createDocumentFragment();

      sidebarData[tab].forEach(({ name, image }) => {
        const card = document.createElement("div");
        card.id = "card";
        card.className = `
          group relative w-full h-[600px] mb-2 border-2 border-transparent hover:border-yellow-100 transition-all duration-300 
          cursor-pointer
        `;

        const img = document.createElement("img");
        img.src = `src/assets/SidebarImages/${image}`;
        img.alt = name;
        img.className = "w-full h-full object-cover absolute top-0 left-0 z-0";

        const overlay = document.createElement("div");
        overlay.className = `
          relative z-10 w-full h-full flex items-end px-6 py-4 justify-between
        `;

        const title = document.createElement("h3");
        title.textContent = name;
        title.className = "text-white text-3xl text-yellow-100";
        title.style.fontFamily = "'GTA Narrow'";

        const button = document.createElement("button");
        button.innerHTML = `
          <svg class="transition-colors duration-300 fill-[#ffb0c4] group-hover:fill-[#36364e]" xmlns="http://www.w3.org/2000/svg" height="16px" width="16px" viewBox="0 -960 960 960"><path d="M647-440H160v-80h487L423-744l57-56 320 320-320 320-57-56 224-224Z"/></svg>
        `;
        button.className = `
          text-[#ffb0c4] flex justify-center items-center size-[38px] bg-[#36364e] rounded-full transition-colors duration-300 group-hover:bg-yellow-100
        `;

        overlay.appendChild(title);
        overlay.appendChild(button);
        card.appendChild(img);
        card.appendChild(overlay);
        fragment.appendChild(card);
      });

      sidebarContent.appendChild(fragment);
    } else {
      // Vista por defecto (personajes, lugares, descargas)
      const fragment = document.createDocumentFragment();

      sidebarData[tab].forEach(({ name, image, viewImage }) => {
        const p = document.createElement("p");
        p.className =
          "h-[62px] w-fit cursor-pointer hover:text-yellow-200 transition-all duration-500 opacity-0 translate-y-4";
        p.textContent = name;

        if (viewImage) {
          p.addEventListener("mouseenter", () => {
            imagePreview.innerHTML = `<img id="image-preview-img" src="src/assets/SidebarImages/${image}" class="h-full w-[80vw] object-cover transition-opacity duration-300 opacity-100" />`;
            sidebarImages.classList.remove("sidebar-blur");
            imagePreview.classList.replace("w-[50vw]", "w-full");

            const img = document.getElementById("image-preview-img");
            if (img) {
              gsap.fromTo(
                img,
                { x: "-16vw" },
                { x: "-35vw", duration: 30, ease: "none" }
              );
            }
          });

          p.addEventListener("mouseleave", restoreLogo);
        }

        fragment.appendChild(p);
      });

      sidebarContent.appendChild(fragment);

      const elements = sidebarContent.querySelectorAll("p");

      gsap.to(elements, {
        opacity: 1,
        duration: 0.4,
        ease: "power2.out",
        y: 0,
        stagger: 0.04,
      });
    }
  }

  tabButtons.forEach((btn) => {
    btn.addEventListener("click", () => {
      tabButtons.forEach((b) => b.classList.remove("selected"));
      btn.classList.add("selected");

      currentTab = btn.dataset.tab;
      renderItems(currentTab);
    });
  });

  renderItems(currentTab);
</script>
